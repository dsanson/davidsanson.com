/** @jsx createElement */
'use strict';

var _get = require('babel-runtime/helpers/get')['default'];

var _inherits = require('babel-runtime/helpers/inherits')['default'];

var _createClass = require('babel-runtime/helpers/create-class')['default'];

var _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _laconaPhrase = require('lacona-phrase');

//
// class TrueDecorator extends Phrase {
//   _handleParse(input, options) {
//     // const category = stackFind(input.stack, 'category', this.props.category, null)
//     // const qualifier = stackFind(input.stack, 'qualifier', this.props.qualifier, null)
//     // const descriptors = _.chain(input.stack).map('descriptor').filter().value(
//   }
//
// }

var Decorator = (function (_Phrase) {
  _inherits(Decorator, _Phrase);

  function Decorator() {
    _classCallCheck(this, Decorator);

    _get(Object.getPrototypeOf(Decorator.prototype), 'constructor', this).apply(this, arguments);
  }

  _createClass(Decorator, [{
    key: 'compute',
    value: function compute(input) {
      return [{
        words: [{ text: this.props.text, input: false, decorator: true }],
        value: this.props.value,
        remaining: input,
        score: 1
      }];
    }
  }, {
    key: 'describe',
    value: function describe() {
      if (!this.props.allowInput) {
        return (0, _laconaPhrase.createElement)('value', { compute: this.compute.bind(this) });
      } else {
        return (0, _laconaPhrase.createElement)(
          'choice',
          { limit: 1 },
          (0, _laconaPhrase.createElement)('literal', { text: this.props.text, value: this.props.value }),
          (0, _laconaPhrase.createElement)('value', { compute: this.compute.bind(this) })
        );
      }
    }
  }]);

  return Decorator;
})(_laconaPhrase.Phrase);

exports['default'] = Decorator;

Decorator.defaultProps = {
  allowInput: true
};
module.exports = exports['default'];